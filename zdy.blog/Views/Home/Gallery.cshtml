@using Zdy.Blog.Data.Models
@model IEnumerable<Zdy.Blog.Data.Models.Gallery>
@inject Zdy.Blog.Services.IRepository _repository
@addTagHelper "Zdy.Blog.TagExtends.PagerTagHelper,Zdy.Blog"
@{
    ViewData["Title"] = "Photos";
    ViewData["Keywords"] = "Photos,所有照片";
}

@foreach (var gallery in Model)
{
    var photos = await _repository.FindAsync<Photo, long>(t => t.SourceID == gallery.ID, t => t.Sort, 9, 1, out int count);
    var length = photos.Count;

    <article class="post">
        <header class="post-head">
            <time datetime="@gallery.PubDate" class="post-time">
                @gallery.PubDate.ToString("MMMM dd，yyyy")
            </time>
            <h1 class="post-title">
                <a href="/photo/@gallery.Slug">
                    @gallery.Title
                </a>
            </h1>
        </header>

        <div class="post-main">
            <div class="photos-wrap-box wrap-@length">

                @foreach (var photo in photos)
                {
                    var url = $"/upload/gallery/{gallery.ID}/{photo.FileName}";
                    <a class="fancybox" href="@url" data-fancybox="@gallery.ID">
                        <div class="photos-wrap-item" style="background-image: url(@url)"></div>
                    </a>
                }
            </div>

            <p class="more-link">
                <a href="/photo/@gallery.Slug">Read More</a>
            </p>
        </div>

        <footer class="post-foot u-cf">
            @{
                if (!string.IsNullOrEmpty(gallery.Categories))
                {
                    var categories = gallery.Categories.Split(',');

                    <ul class="post-tag u-fl">
                        @foreach (var category in categories)
                        {
                            <li class="post-tag-item">
                                <a href="/search2/@category" class="post-tag-link">
                                    @category
                                </a>
                            </li>
                        }
                    </ul>
                }
            }

            @{
                int cc = await _repository.CountAsync<Comment>(t => t.IsApproved && t.SourceID == gallery.ID);
            }

            <a href="/photo/@gallery.Slug" class="post-foot-link u-fr"><img class="icon" src="~/images/see.png" />@gallery.CheckNumber</a>
            <a href="/photo/@gallery.Slug#post-comments" class="post-foot-link u-fr"><img class="icon" src="~/images/comments.png" />@cc</a>
        </footer>
    </article>
}

<div class="front-pager">
    <pager pager-option="@ViewBag.PagerOption"></pager>
</div>